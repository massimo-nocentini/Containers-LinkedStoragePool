{	"classes" : {		"CTLinkedStorageValueLinkTest" : {			"hash" : 2479360,			"definition" : "TestCase subclass: #CTLinkedStorageValueLinkTest\r\tuses: TIceImagesExporting\r\tinstanceVariableNames: ''\r\tclassVariableNames: ''\r\tpackage: 'Containers-LinkedStoragePool-Tests'",			"comment" : [				"This class contains tests"			],			"category" : "Containers-LinkedStoragePool-Tests"		},		"Object" : {			"hash" : 804608,			"definition" : "ProtoObject subclass: #Object\r\tinstanceVariableNames: ''\r\tclassVariableNames: 'DependentsFields'\r\tpackage: 'Kernel-Objects'",			"comment" : [				"`Object` is the root class for almost all of the other classes in the class hierarchy. The exceptions are ProtoObject (the superclass of Object) and its subclasses.",				"",				"Class `Object` provides default behavior common to all normal objects, such as access, copying, comparison, error handling, message sending, and reflection. Also utility messages that all objects should respond to are defined here.",				"",				"`Object` has no instance variables, nor should any be added. This is due to several classes of objects that inherit from Object that have special implementations (SmallInteger and UndefinedObject for example) or the VM knows about and depends on the structure and layout of certain standard classes.",				"",				"Class Variables:",				"\tDependentsFields\t\tan IdentityDictionary",				"\t\tProvides a virtual 'dependents' field so that any object may have one",				"\t\tor more dependent views, synchronized by the changed:/update: protocol.",				"\t\tNote that class Model has a real slot for its dependents, and overrides",				"\t\tthe associated protocol with more efficient implementations.",				"",				"Because `Object` is the root of the inheritance tree, methods are often defined in Object to give all objects special behaviors needed by certain subsystems or applications, or to respond to certain general test messages such as isMorph.",				"",				"",				"###Miscellanous Discussions",				"",				"About `at:` index accepting float and not only integers",				" ",				"This behavior is also free in the sense that the failure code is only invoked when the primitive fails and so adds nothing to the cost of successful accesses, which are the high dynamic frequency operation.  It will also show up under",				"profiling if one is concerned about efficiency, and so isn't a hidden cost.",				"",				"It is also in keeping with Pharo's mixed mode/arbitrary precision",				"implicit coercion number system that one *can* use fractions or floats as",				"indices.  Stripping out coercions like this will make the system more brittle.  So ",				"please do *not* remove this hack.  I think it's a feature and a useful one.",				"",				"Can you give me an example that demonstrates the usefulness of this feature?",				"",				"```",				"| a r |",				"a := Array new: 10 withAll: 0.",				"r := Random new.",				"100 timesRepeat: [| v | v := r next * 10 + 1. a at: v put: (a at: v) + 1].",				"a",				"```",				"",				"i.e. I didn't have to provide an explicit rounding step.  That's useful.  But in general anywhere ",				"where an index is derived by some calculation not having to provide the rounding step could be ",				"useful/helpful/more concise.  e.g. (n roundTo: 0.1) * 10 vs ((n roundTo: 0.1) * 10) asInteger.",				"",				"Some thought went into the original choice.  It is not a hack but there by intent.  The integers are ",				"simply a subset of the reals and forcing the programmer to use them is favouring the machine ",				"above the programmer.",				"",				"But I think you should justify getting rid of it rather than my having to justify keeping it.  Getting ",				"rid of it risks breaking code.  If it is there but does not harm then why get rid of it?",				"",				"best Eliot Miranda "			],			"category" : "Kernel-Objects"		}	},	"messages" : {		"testSimpleValueLink" : {			"senders" : [				"BaselineOfContainersLinkedStoragePool>>#scriptValueLinkMessagesForDoc",				"CTLinkedStorageValueLinkTest>>#test21ValueLinks"			],			"implementors" : {				"CTLinkedStorageValueLinkTest" : {					"sourceCode" : [						"testSimpleValueLink",						"",						"\t| l |",						"\tl := 1 ~~> nil.",						"",						"\t^ self exportSlotsGraphOf: l"					],					"body" : [						"| l |",						"l := 1 ~~> nil.",						"",						"^ self exportSlotsGraphOf: l"					],					"category" : "tests",					"comment" : [ ],					"hash" : 3535830,					"argumentNames" : [ ]				}			}		},		"test4321ValueLinksSimplerRepr" : {			"senders" : [				"BaselineOfContainersLinkedStoragePool>>#scriptValueLinkMessagesForDoc"			],			"implementors" : {				"CTLinkedStorageValueLinkTest" : {					"sourceCode" : [						"test4321ValueLinksSimplerRepr",						"",						"\t^ self",						"\t\t  export: self test4321ValueLinks",						"\t\t  pathSuffix: ''",						"\t\t  selector: #gtInspectorLinksUsingCanvas:"					],					"body" : [						"^ self",						"\t  export: self test4321ValueLinks",						"\t  pathSuffix: ''",						"\t  selector: #gtInspectorLinksUsingCanvas:"					],					"category" : "tests",					"comment" : [ ],					"hash" : 3273531,					"argumentNames" : [ ]				}			}		},		"test43214ValueLinksFrom2Recursive" : {			"senders" : [				"BaselineOfContainersLinkedStoragePool>>#scriptValueLinkMessagesForDoc"			],			"implementors" : {				"CTLinkedStorageValueLinkTest" : {					"sourceCode" : [						"test43214ValueLinksFrom2Recursive",						"",						"\t^ self exportSlotsGraphRecursiveOf:",						"\t\t  self test43214ValueLinksRecursive nextLink nextLink"					],					"body" : [						"^ self exportSlotsGraphRecursiveOf:",						"\t  self test43214ValueLinksRecursive nextLink nextLink"					],					"category" : "tests",					"comment" : [ ],					"hash" : 3273589,					"argumentNames" : [ ]				}			}		},		"test4321ValueLinks" : {			"senders" : [				"BaselineOfContainersLinkedStoragePool>>#scriptValueLinkMessagesForDoc",				"CTLinkedStorageValueLinkTest>>#test4321ValueLinksRecursive",				"CTLinkedStorageValueLinkTest>>#test4321ValueLinksSimplerRepr"			],			"implementors" : {				"CTLinkedStorageValueLinkTest" : {					"sourceCode" : [						"test4321ValueLinks",						"",						"\t| l |",						"\tl := 4 ~~> self test321ValueLinks.",						"",						"\t^ self exportSlotsGraphOf: l"					],					"body" : [						"| l |",						"l := 4 ~~> self test321ValueLinks.",						"",						"^ self exportSlotsGraphOf: l"					],					"category" : "tests",					"comment" : [ ],					"hash" : 3798092,					"argumentNames" : [ ]				}			}		},		"test4321ValueLinksRecursive" : {			"senders" : [				"BaselineOfContainersLinkedStoragePool>>#scriptValueLinkMessagesForDoc"			],			"implementors" : {				"CTLinkedStorageValueLinkTest" : {					"sourceCode" : [						"test4321ValueLinksRecursive",						"",						"\t^ self exportSlotsGraphRecursiveOf: self test4321ValueLinks"					],					"body" : [						"^ self exportSlotsGraphRecursiveOf: self test4321ValueLinks"					],					"category" : "tests",					"comment" : [ ],					"hash" : 3535455,					"argumentNames" : [ ]				}			}		},		"test21ValueLinks" : {			"senders" : [				"BaselineOfContainersLinkedStoragePool>>#scriptValueLinkMessagesForDoc",				"CTLinkedStorageValueLinkTest>>#test321ValueLinks"			],			"implementors" : {				"CTLinkedStorageValueLinkTest" : {					"sourceCode" : [						"test21ValueLinks",						"",						"\t| l |",						"\tl := 2 ~~> self testSimpleValueLink.",						"",						"\t^ self exportSlotsGraphOf: l"					],					"body" : [						"| l |",						"l := 2 ~~> self testSimpleValueLink.",						"",						"^ self exportSlotsGraphOf: l"					],					"category" : "tests",					"comment" : [ ],					"hash" : 3535946,					"argumentNames" : [ ]				}			}		},		"~~>" : {			"senders" : [				"BaselineOfContainersLinkedStoragePool>>#scriptValueLinkMessagesForDoc",				"BinomialHeap>>#min:",				"BinomialHeap>>#associations:",				"BinomialHeap>>#pushTree:onTrees:",				"BinomialHeap>>#merge:with:",				"BinomialTree>>#edges:",				"BinomialTree>>#edges",				"BinomialTree>>#linkBinomialTree:",				"BitArray>>#extractBits:byte:valueLink:",				"CTLinkedStorageValueLinkTest>>#test43214ValueLinksRecursive",				"CTLinkedStorageValueLinkTest>>#test321ValueLinks",				"CTLinkedStorageValueLinkTest>>#test21ValueLinks",				"CTLinkedStorageValueLinkTest>>#testSimpleValueLink",				"CTLinkedStorageValueLinkTest>>#test4321ValueLinks",				"CTLinkedStorageValueLinkTest>>#test11ValueLinksLoop",				"ContinuationTest>>#remove:oneStar:sentinel:continuation:",				"ContinuationTest>>#testLeftmost",				"ContinuationTest>>#intersectValueLink:withCollection:",				"ContinuationTest>>#remove:uptoLastValueLink:continuation:",				"ContinuationTest>>#testRemoveOneStar",				"ContinuationTest>>#remove:oneStarWithTry:continuation:",				"ContinuationTest>>#testTwoInARow",				"Integer>>#skewBinaryCanonicalSparseRepresentation",				"Integer>>#binaryCanonicalDenseRepresentation",				"Integer>>#skewBinaryCanonicalDenseRepresentation",				"Integer>>#skewBinaryCanonicalDenseRepresentationWeight:",				"Integer>>#binaryCanonicalDenseRepresentationWith:",				"Queue>>#add:",				"SBRAL>>#associations",				"SBRALBinaryTreeLeaf>>#edges",				"SBRALBinaryTreeNode>>#edges:",				"SequenceableCollection>>#asValueLink",				"SkewBinaryCanonicalNumber>>#gtInspectorSkewDenseRepresentationInCanvas:",				"SkewBinaryCanonicalNumber>>#cons:onto:",				"SkewBinaryCanonicalNumberTest>>#testIncrement",				"SkewBinaryCanonicalNumberUnaryFunctionDecrement>>#decrementBitZeroOrTwo:by:onto:",				"ValueLink>>#edges:parent:",				"ValueLink>>#reversed:"			],			"implementors" : {				"Object" : {					"sourceCode" : [						"~~> aValueLinkOrNil",						"",						"\t\"Answer a ValueLink between self and aValueLinkOrNil.",						"\tThis message allows the receiver to be inserted in a chain of objects, terminated by nil.\"",						"",						"\t\"Code of ValueLink>>#nextLink: and ValueLink>>#value: are inline here for speed.\"",						"",						"\t\"(1 ~~> nil) = ValueLink new value: 1\"",						"",						"\t\"(1 ~~> 'one') value >>> 1\"",						"",						"\t\"(1 ~~> nil) nextLink >>> nil\"",						"",						"\t\"Note that `value` can be ANY object; on the other hand, `nextLink` should be either another ",						"\tValueLink object or nil.\"",						"",						"\t^ ValueLink basicNew",						"\t\t  value: self;",						"\t\t  nextLink: aValueLinkOrNil;",						"\t\t  yourself"					],					"body" : [						"^ ValueLink basicNew",						"\t  value: self;",						"\t  nextLink: aValueLinkOrNil;",						"\t  yourself"					],					"category" : "associating",					"comment" : [						"Answer a ValueLink between self and aValueLinkOrNil.",						"\tThis message allows the receiver to be inserted in a chain of objects, terminated by nil."					],					"hash" : 18638817,					"argumentNames" : [						"aValueLinkOrNil"					]				}			}		},		"test321ValueLinks" : {			"senders" : [				"BaselineOfContainersLinkedStoragePool>>#scriptValueLinkMessagesForDoc",				"CTLinkedStorageValueLinkTest>>#test4321ValueLinks"			],			"implementors" : {				"CTLinkedStorageValueLinkTest" : {					"sourceCode" : [						"test321ValueLinks",						"",						"\t| l |",						"\tl := 3 ~~> self test21ValueLinks.",						"",						"\t^ self exportSlotsGraphOf: l"					],					"body" : [						"| l |",						"l := 3 ~~> self test21ValueLinks.",						"",						"^ self exportSlotsGraphOf: l"					],					"category" : "tests",					"comment" : [ ],					"hash" : 3535946,					"argumentNames" : [ ]				}			}		},		"test43214ValueLinksRecursive" : {			"senders" : [				"BaselineOfContainersLinkedStoragePool>>#scriptValueLinkMessagesForDoc",				"CTLinkedStorageValueLinkTest>>#test43214ValueLinksFrom2Recursive"			],			"implementors" : {				"CTLinkedStorageValueLinkTest" : {					"sourceCode" : [						"test43214ValueLinksRecursive",						"",						"\t| l1 l |",						"\tl1 := 1 ~~> nil.",						"\tl := 4 ~~> (3 ~~> (2 ~~> l1)).",						"\tl1 nextLink: l.",						"",						"\t^ self exportSlotsGraphRecursiveOf: l"					],					"body" : [						"| l1 l |",						"l1 := 1 ~~> nil.",						"l := 4 ~~> (3 ~~> (2 ~~> l1)).",						"l1 nextLink: l.",						"",						"^ self exportSlotsGraphRecursiveOf: l"					],					"category" : "tests",					"comment" : [ ],					"hash" : 3799359,					"argumentNames" : [ ]				}			}		},		"test11ValueLinksLoop" : {			"senders" : [				"BaselineOfContainersLinkedStoragePool>>#scriptValueLinkMessagesForDoc",				"CTLinkedStorageValueLinkTest>>#test11ValueLinksLoopRecursive"			],			"implementors" : {				"CTLinkedStorageValueLinkTest" : {					"sourceCode" : [						"test11ValueLinksLoop",						"",						"\t| l |",						"\tl := 1 ~~> nil.",						"\tl nextLink: l.",						"",						"\t^ self exportSlotsGraphOf: l"					],					"body" : [						"| l |",						"l := 1 ~~> nil.",						"l nextLink: l.",						"",						"^ self exportSlotsGraphOf: l"					],					"category" : "tests",					"comment" : [ ],					"hash" : 3536341,					"argumentNames" : [ ]				}			}		},		"test11ValueLinksLoopRecursive" : {			"senders" : [				"BaselineOfContainersLinkedStoragePool>>#scriptValueLinkMessagesForDoc"			],			"implementors" : {				"CTLinkedStorageValueLinkTest" : {					"sourceCode" : [						"test11ValueLinksLoopRecursive",						"",						"\t^ self exportSlotsGraphRecursiveOf: self test11ValueLinksLoop"					],					"body" : [						"^ self exportSlotsGraphRecursiveOf: self test11ValueLinksLoop"					],					"category" : "tests",					"comment" : [ ],					"hash" : 3273311,					"argumentNames" : [ ]				}			}		}	}}